{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Boilerplate API",
        "description": "Laravel Boilerplate API Documentation",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "Laravel Boilerplate API V1 Server"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate a user and return a JWT token",
                "operationId": "99d66635c4992aeaa6aa44ff653d0563",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/token"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user data",
                "description": "Return the authenticated user data",
                "operationId": "7edae2cdbaafc10dff8c9c4198b320a2",
                "responses": {
                    "200": {
                        "description": "User data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer-token": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidate the authenticated user JWT token",
                "operationId": "6abf3b64a4bc7838d56346f05a5153af",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/logout"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer-token": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token JWT",
                "description": "Refresh the authenticated user JWT token",
                "operationId": "e7ab7446393758bb71fd1946a349e500",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/token"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer-token": []
                    }
                ]
            }
        },
        "/email/verify/{id}/{hash}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Verify email",
                "description": "Verify the email of the authenticated user",
                "operationId": "ba554bbc30efd27a22377e7cd6c13595",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Email verification hash",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "message",
                                    "description": "Email verified successfully",
                                    "required": [
                                        "message"
                                    ],
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Email verified successfully"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer-token": []
                    }
                ]
            }
        },
        "/email/send": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Send email verification",
                "description": "Send an email verification to the authenticated user",
                "operationId": "5b2282a2f8bc6953ddb6dbfc42e24a1a",
                "responses": {
                    "200": {
                        "description": "Email verification sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "message",
                                    "description": "Email verification sent successfully",
                                    "required": [
                                        "message"
                                    ],
                                    "type": "object"
                                },
                                "example": {
                                    "message": "Email verification sent successfully"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer-token": []
                    }
                ]
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register user",
                "description": "Register a new user",
                "operationId": "128664a0d923ff02b986d48fb63fc693",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/registerUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "login": {
                "description": "Login schema",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string",
                        "minLength": 8,
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "logout": {
                "description": "Logout schema",
                "required": [
                    "message"
                ],
                "properties": {
                    "message": {
                        "description": "Logout message",
                        "type": "string",
                        "example": "Logout successful"
                    }
                },
                "type": "object"
            },
            "registerUser": {
                "description": "Register user schema",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string",
                        "minLength": 8,
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "description": "User password confirmation",
                        "type": "string",
                        "minLength": 8,
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "token": {
                "description": "Response for successful JWT token request",
                "required": [
                    "access_token",
                    "token_type",
                    "expires_in"
                ],
                "properties": {
                    "access_token": {
                        "description": "Access JWT token",
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                    },
                    "token_type": {
                        "description": "Token type",
                        "type": "string",
                        "example": "bearer"
                    },
                    "expires_in": {
                        "description": "Token expiration time in seconds",
                        "type": "integer",
                        "example": 3600
                    }
                },
                "type": "object"
            },
            "user": {
                "description": "User data",
                "required": [
                    "id",
                    "name",
                    "email",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "description": "Unique user ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "description": "Full user name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User email address",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "email_verified_at": {
                        "description": "Email verification date and time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:30:00Z",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "User creation date and time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update date and time",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-14T10:30:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer-token": {
                "type": "http",
                "description": "Token JWT for authentication. Add the token without the \"Bearer\" prefix",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication endpoints"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}